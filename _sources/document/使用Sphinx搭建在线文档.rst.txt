如何搭建在线技术文档网站
============

第一步：安装配置开发环境
------------
安装anaconda3或者miniconda3
安装python软件包

```shell
pip install sphinx
pip install sphinx_rtd_theme
```
第一个包是sphinx，第二个包是sphinx的主题包。

第二步：新建并初始化项目

```shell
mkdir HelloWorld && cd HelloWorld #这是新建一个HelloWorld项目
sphinx-quickstart #这是初始化项目
```
后面会有一系列问题需要回答。
之后，我们到了一个非常关节的配置环节，我们需要在HelloWorld/source/conf.py文件中进行一些必要的配置。下面是我之前配置好的一个实例：
```python
# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'Learning Notes'
copyright = '2019, Liu Qiang'
author = 'Liu Qiang'

# The full version, including alpha/beta/rc tags
release = '0.0.1'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
mathjax_path = 'https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'
extensions = [
  'sphinx.ext.autodoc',
  'sphinx.ext.doctest',
  'sphinx.ext.intersphinx',
  'sphinx.ext.todo',
  'sphinx.ext.coverage',
  'sphinx.ext.mathjax',
  'sphinx.ext.ifconfig',
  'sphinx.ext.viewcode',
  'sphinx.ext.githubpages',
]

math_number_all = True
extensions.append('sphinx.ext.graphviz')

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'zh_CN'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
import sphinx_rtd_theme
html_theme = "sphinx_rtd_theme"
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
html_theme_options = {
    'canonical_url': '', 
    'logo_only': False, #仅显示徽标图像，不在侧边栏顶部显示项目名称。
    'display_version': True, #如果为True，则版本号显示在侧栏的顶部。
    'prev_next_buttons_location': 'bottom', #显示下一个和上一个按钮的位置。 可以是bottom，top，both或None。
    'style_external_links': False, #在外部链接旁边添加一个图标。
    'vcs_pageview_mode': 'blob', #更改使用display_github，display_gitlab等时查看文件的方式。使用GitHub或GitLab时，可以是：blob（默认），edit或raw。 在Bitbucket上，可以是：view（默认）或edit。
    'style_nav_header_background': '#2980B9', #在导航栏中更改搜索区域的背景。 该值可以是CSS后台属性中任何有效的值。
    # Toc options
    'collapse_navigation': True, #启用此功能后，导航条目将无法展开–每个条目旁边的[+]图标将被删除。
    'sticky_navigation': True, #滚动页面时，滚动浏览具有主页内容的页面。
    'navigation_depth': 4, #目录树的最大深度。 将此设置为-1可以无限深度。
    'includehidden': True, #指定导航是否包含隐藏的目录（即，任何带有：hidden：选项标记的toctree指令）。
    'titles_only': False #启用后，页面子标题将不包含在导航中。
}

# html_logo = './_static/stitch.png'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

from recommonmark.parser import CommonMarkParser
source_parsers = {
    '.md': CommonMarkParser,
}
source_suffix = ['.rst', '.md']
```

第三步：编辑、编译并运行HelloWorld

首先，我们需要编写一系列的.rst文件，并在文件中严格按照reStructuredText语法的规范来编辑文本内容，最后需要在HelloWorld/source/index.rst文件中添加其他的.rst文件的路径到index.rst文件中，具体的添加方法如下：
```txt
.. LiuQaingNotes documentation master file, created by
   sphinx-quickstart on Sun Dec 29 12:41:49 2019.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to LiuQaingNotes's documentation!
=========================================

.. toctree::
   :maxdepth: 2
   :caption: Contents:

   resume


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
```
注意：添加进来的`.rst文件`的路径中不要包含后缀`.rst`。

然后，我们使用如下的两条命令来编译输出静态网页：
```shell
sphinx-build -b html source build
make html
```
使用浏览器打开HelloWorld/build/index.html文件，即可打开前面编译生成的静态网站。

现在，我们到了最后一步：部署本地静态网站到github上。
https://pages.github.com/
https://blog.csdn.net/zyxhangiian123456789/article/details/79463697
使用ReadtheDocs部署项目文档


参考资料：
Sphinx-RTD-Theme主题配置：

https://sphinx-rtd-theme.readthedocs.io/en/latest/configuring.html

Sphinx参考资料
https://github.com/readthedocs/recommonmark/blob/master/docs/conf.py
https://blog.csdn.net/dupeng0811/article/details/89877726

https://blog.csdn.net/enjoyyl/article/details/97820201

http://www.sphinx-doc.org/en/master/contents.html#document-ext/math

http://www.sphinx-doc.org/en/master/usage/markdown.html#configuration

http://www.bary.com/doc/a/228277572381775842/
